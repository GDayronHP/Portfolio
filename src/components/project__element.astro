---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

import codeclimberImg from "../assets/images/codeclimber.jpg";
import fastquizImg from "../assets/images/fastquiz.jpg";
import imagen1 from "../assets/images/imagen1.webp";
import imagen2 from "../assets/images/imagen2.webp";
import evaluacionesImg from "../assets/images/Evaluaciones.png";
import wicPortalImg from "../assets/images/WIC-Portal.png";

const {
  image,
  title,
  languages,
  text,
  githubLink = null,
  pageLink = null,
} = Astro.props;

const imageMap = {
  codeclimber: codeclimberImg,
  fastquiz: fastquizImg,
  imagen1: imagen1,
  imagen2: imagen2,
  evaluaciones: evaluacionesImg,
  Evaluaciones: evaluacionesImg,
  wicPortal: wicPortalImg,
  "WIC-Portal": wicPortalImg,
};

let imageSrc;
if (typeof image === "string") {
  if (image.startsWith("src/assets/")) {
    const parts = image.split("/");
    const fileName = parts[parts.length - 1];
    const filename = fileName ? fileName.split(".")[0] : "";
    imageSrc = imageMap[filename];
  } else {
    imageSrc = imageMap[image];
  }
} else {
  imageSrc = image;
}

let languageList: [string, string][] = [];
if (
  languages &&
  typeof languages === "object" &&
  languages.names &&
  languages.icons
) {
  languageList = languages.names.map((name: string, index: number) => [
    name,
    languages.icons[index],
  ]);
} else if (Array.isArray(languages)) {
  const iconMap: Record<string, string> = {
    HTML: "ion:logo-html5",
    JavaScript: "ion:logo-javascript",
    TailwindCss: "ion:logo-tailwindcss",
    Laravel: "ion:logo-laravel",
    Mysql: "ion:logo-mysql",
    React: "ion:logo-react",
    Css: "ion:logo-css3",
    Django: "ion:logo-django",
  };
  languageList = languages.map((lang: string) => [
    lang,
    iconMap[lang] || "ion:code",
  ]);
}
---

<div
  data-aos="fade-up"
  class="project__element grid grid-cols-1 md:grid-cols-2 w-full place-items-center mb-16"
>
  <div class="mr-0 md:mr-5 mb-5 md:mb-0">
    <Image src={imageSrc} alt={title} class="rounded-lg" />
  </div>
  <div class="project__element flex items-start justify-start flex-col w-full">
    <h2 class="font-header text-2xl font-semibold mb-3">{title}</h2>
    <div class="flex text-sm mb-3 flex-wrap">
      {
        languageList.map(([name, icon]: [string, string]) => (
          <div class="flex flex-row mb-1 bg-white/10 p-2 mr-1 rounded-md transition-colors cursor-default">
            <Icon name={icon} width={15} height={15} class:list={"mr-1 "} />
            <span class="text-xs">{name}</span>
          </div>
        ))
      }
    </div>
    <p class="text-sm text-white/50 mb-3">{text}</p>
    {
      githubLink ? (
        <button class="flex items-center mr-4 px-3 py-1 bg-tertiary border-[1px] border-white/10 rounded-lg hover:bg-tertiaryHover transition-colors">
          <Icon
            name="ion:logo-github"
            width={15}
            height={15}
            class:list={"mr-2"}
          />
          <a href={githubLink} target="_blank">
            Code
          </a>
        </button>
      ) : (
        <button class="flex items-center mr-4 px-3 py-1 bg-tertiary border-[1px] border-white/10 rounded-lg hover:bg-tertiaryHover transition-colors">
          <Icon
            name="logos:chrome-web-store"
            width={15}
            height={15}
            class:list={"mr-2"}
          />
          <a href={pageLink} target="_blank">
            Link
          </a>
        </button>
      )
    }
  </div>
</div>
